definitions:
  dto.EventType:
    enum:
    - 0
    - 1
    - 2
    - 3
    - 4
    type: integer
    x-enum-varnames:
    - CreateFile
    - DeleteFile
    - CopyFile
    - CreateBucket
    - DeleteBucket
  dto.TaskEvent:
    properties:
      bucket:
        type: string
      created_at:
        type: string
      event_type:
        $ref: '#/definitions/dto.EventType'
      file_path:
        type: string
      file_size:
        type: integer
      id:
        type: string
      modified_at:
        type: string
      status:
        $ref: '#/definitions/dto.TaskStatus'
      status_text:
        type: string
    type: object
  dto.TaskStatus:
    enum:
    - -1
    - 0
    - 1
    - 2
    - 3
    type: integer
    x-enum-varnames:
    - Failed
    - Received
    - Pending
    - Processing
    - Successful
  httpserver.AddDirectoryToWatcherForm:
    properties:
      bucket:
        example: test-folder
        type: string
      suffix:
        example: ./some-directory
        type: string
    type: object
  httpserver.BadRequestForm:
    properties:
      message:
        example: Bad Request message
        type: string
      status:
        example: 400
        type: integer
    type: object
  httpserver.ResponseForm:
    properties:
      message:
        example: Done
        type: string
      status:
        example: 200
        type: integer
    type: object
  httpserver.ServerErrorForm:
    properties:
      message:
        example: Server Error message
        type: string
      status:
        example: 503
        type: integer
    type: object
info:
  contact: {}
  description: Watchtower is a project designed to provide processing files created
    into cloud by events.
  title: Watchtower service
  version: 0.0.1
paths:
  /tasks/{bucket}:
    get:
      consumes:
      - application/json
      description: Get processing/unrecognized/done task document
      operationId: get-task
      parameters:
      - description: Bucket id
        in: path
        name: bucket
        required: true
        type: string
      - description: File path into bucket
        in: query
        name: file
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Ok
          schema:
            $ref: '#/definitions/dto.TaskEvent'
        "400":
          description: Bad Request message
          schema:
            $ref: '#/definitions/httpserver.BadRequestForm'
        "503":
          description: Server does not available
          schema:
            $ref: '#/definitions/httpserver.ServerErrorForm'
      summary: Get processing task
      tags:
      - tasks
  /tasks/{bucket}/all:
    get:
      consumes:
      - application/json
      description: Load tasks of processing/unrecognized/done documents
      operationId: load-tasks
      parameters:
      - description: Bucket id
        in: path
        name: bucket
        required: true
        type: string
      - description: Status
        in: query
        name: status
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Ok
          schema:
            items:
              $ref: '#/definitions/dto.TaskEvent'
            type: array
        "400":
          description: Bad Request message
          schema:
            $ref: '#/definitions/httpserver.BadRequestForm'
        "503":
          description: Server does not available
          schema:
            $ref: '#/definitions/httpserver.ServerErrorForm'
      summary: Load tasks of processing documents
      tags:
      - tasks
  /watcher/{bucket}:
    delete:
      consumes:
      - application/json
      description: Attach new directory to watcher
      operationId: folders-detach
      parameters:
      - description: Bucket ids
        in: path
        name: bucket
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Ok
          schema:
            $ref: '#/definitions/httpserver.ResponseForm'
        "400":
          description: Bad Request message
          schema:
            $ref: '#/definitions/httpserver.BadRequestForm'
        "503":
          description: Server does not available
          schema:
            $ref: '#/definitions/httpserver.ServerErrorForm'
      summary: Attach new directory to watcher
      tags:
      - watcher
    post:
      consumes:
      - application/json
      description: Attach new directory to watcher
      operationId: folders-attach
      parameters:
      - description: Bucket form
        in: body
        name: jsonQuery
        required: true
        schema:
          $ref: '#/definitions/httpserver.AddDirectoryToWatcherForm'
      produces:
      - application/json
      responses:
        "200":
          description: Ok
          schema:
            $ref: '#/definitions/httpserver.ResponseForm'
        "400":
          description: Bad Request message
          schema:
            $ref: '#/definitions/httpserver.BadRequestForm'
        "503":
          description: Server does not available
          schema:
            $ref: '#/definitions/httpserver.ServerErrorForm'
      summary: Attach new directory to watcher
      tags:
      - watcher
swagger: "2.0"
tags:
- description: APIs to manage cloud watchers
  name: watcher
- description: APIs to get status tasks
  name: tasks
