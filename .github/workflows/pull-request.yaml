name: Pull-Request

on:
  push:
    branches: [ "master" ]
  pull_request_target:
    types: [ assigned, opened, synchronize ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23'

      - name: Build
        run: go build -v -o ./bin/watchtower ./cmd/watchtower

  lint:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v5
        with:
          go-version: '1.23'
          cache: false
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v4
        with:
          version: v1.54
          args: --timeout=30m --config=./.golangci.yml --issues-exit-code=0

  test:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23'

      - name: Set up Docker Compose
        run: |
          docker compose --version

      - name: Start services with Docker Compose
        run: |
          docker compose up -d
          sleep 10

      - name: tests
        run: go test -v -count=1 -race ./...
